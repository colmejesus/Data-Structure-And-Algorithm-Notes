{
  "main": {
    "id": "105c873261daac51",
    "type": "split",
    "children": [
      {
        "id": "4d25d8236e1c7682",
        "type": "tabs",
        "children": [
          {
            "id": "375e48aa46a953a7",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "07. Stack Applications.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "d1d961f677262416",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "08. Implementation of Post-Fix evaluation in Java.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "b91857f5367d3151",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "20. Tree Data Structure.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "755a0aa0d813d52f",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "21. Binary Search Tree.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "66c1971c78578602",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "22. Binary Tree Operations.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "e374a6c4563e7ccc",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "23 Binary Tree Implementation (In progress).md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "0af7eda1c20457a0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "10. Queue Data Structure.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "e7a831d6ca746f81",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "11. Implementing Queue using Array.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "0cf2c1e7270762db",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "11. Circular Queue (ADT).md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f846ca3fe53e44ea",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "13. Implementation of Circular Queue.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f0167f9309f09050",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "14. Priority Queue.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "f10b85f40098d84a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "15. Linked List (ADT).md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "06179f38d2b78b13",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "16. Implementing Linked List.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "61c9c56672004d81",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "17. Cicrular Linked List.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "a71eb58dd52255fd",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "18. Doubly Linked List.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "d5206827d2ec603a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "19. Loop Detection In Linked List.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "0d5874f01c2b2a42",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "20. Tree Data Structure.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "32e6d22dec487d5c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "02. Abstract Data Type (ADT).md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "90db7a0bd2dd33f0",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "03. Array and Array Operations.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "7c91fc1544f8d87f",
            "type": "leaf",
            "state": {
              "type": "empty",
              "state": {}
            }
          },
          {
            "id": "1096394bf4c0800b",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "04. Two Dimentional Arrays in Java.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "6f337a38e97c572c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "06. Sorting and Searching Operations on Arrays.md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "8a7f5b10d7d3774c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "05. Stack Data Structure (ADT).md",
                "mode": "source",
                "source": false
              }
            }
          },
          {
            "id": "b7528cb108f662f7",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "07. Stack Applications.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ],
        "currentTab": 5
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "826ccca97a7a8d95",
    "type": "split",
    "children": [
      {
        "id": "9826e9a6e0f48d8e",
        "type": "tabs",
        "children": [
          {
            "id": "38507858019cbb90",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "04e62608f18f4179",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "92ad566e00d9c5e5",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "87e0abbbb08db347",
    "type": "split",
    "children": [
      {
        "id": "6c0e00199085c7d3",
        "type": "tabs",
        "children": [
          {
            "id": "b368ba85439c4170",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "23 Binary Tree Implementation (In progress).md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "0c668c70732a46d8",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "23 Binary Tree Implementation (In progress).md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "6bc6676f3099d37c",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "9765b5730cedd9f2",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "23 Binary Tree Implementation (In progress).md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false,
      "obsidian-markdown-formatting-assistant-plugin:Open Markdown Formatting Assistant": false
    }
  },
  "active": "e374a6c4563e7ccc",
  "lastOpenFiles": [
    "07. Stack Applications.md",
    "05. Stack Data Structure (ADT).md",
    "06. Sorting and Searching Operations on Arrays.md",
    "04. Two Dimentional Arrays in Java.md",
    "01. Introduction to Data Structures.md",
    "23 Binary Tree Implementation (In progress).md",
    "22. Binary Tree Operations.md",
    "03. Array and Array Operations.md",
    "02. Abstract Data Type (ADT).md",
    "_attachments/bubble-short.png"
  ]
}